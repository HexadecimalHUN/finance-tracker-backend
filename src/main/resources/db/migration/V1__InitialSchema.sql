CREATE TABLE roles (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


-- Create app_user table
CREATE TABLE app_user (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    username VARCHAR(50) NOT NULL UNIQUE,
    email VARCHAR(100) NOT NULL UNIQUE,
    password VARCHAR(255),
    primary_currency VARCHAR(10),
    provider VARCHAR(50),
    provider_id VARCHAR(100)
);

-- Create icon table
CREATE TABLE icon (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    icon_name VARCHAR(255) NOT NULL UNIQUE
);

-- Create spending_category table
CREATE TABLE spending_category (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    user_id BIGINT NOT NULL,
    icon_id BIGINT NOT NULL,
    CONSTRAINT fk_spending_category_user FOREIGN KEY (user_id) REFERENCES app_user (id),
    CONSTRAINT fk_spending_category_icon FOREIGN KEY (icon_id) REFERENCES icon (id)
);

-- Create transaction table
CREATE TABLE transaction (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    amount NUMERIC(38, 2) NOT NULL,
    date DATE NOT NULL,
    category_id BIGINT NOT NULL,
    description VARCHAR(255),
    CONSTRAINT fk_transaction_category FOREIGN KEY (category_id) REFERENCES spending_category (id)
);

-- Create user_roles table for many-to-many relationship between users and roles
CREATE TABLE user_roles (
    user_id BIGINT NOT NULL,
    role_id BIGINT NOT NULL,
    PRIMARY KEY (user_id, role_id),
    CONSTRAINT fk_user_roles_user FOREIGN KEY (user_id) REFERENCES app_user (id),
    CONSTRAINT fk_user_roles_role FOREIGN KEY (role_id) REFERENCES roles (id)
);

-- Create user_spending_categories table for many-to-many relationship between users and spending categories
CREATE TABLE user_spending_categories (
    user_id BIGINT NOT NULL,
    category_id BIGINT NOT NULL,
    PRIMARY KEY (user_id, category_id),
    CONSTRAINT fk_user_spending_categories_user FOREIGN KEY (user_id) REFERENCES app_user (id),
    CONSTRAINT fk_user_spending_categories_category FOREIGN KEY (category_id) REFERENCES spending_category (id)
);